# Generated by Django 3.1.7 on 2021-03-27 20:55

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id_badge', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=60)),
                ('level', models.IntegerField()),
                ('type', models.CharField(max_length=40)),
                ('filefield', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'badge',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id_child', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=70)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('image_profil', models.CharField(blank=True, max_length=100, null=True)),
                ('last_login', models.DateTimeField()),
                ('date_jointed', models.DateTimeField()),
                ('pwd', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'child',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tribut',
            fields=[
                ('id_tribut', models.AutoField(primary_key=True, serialize=False)),
                ('tribut_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tribut',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Myuser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id_myuser', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=70)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('image_profil', models.CharField(blank=True, max_length=100, null=True)),
                ('is_author', models.BooleanField()),
                ('last_login', models.DateTimeField()),
                ('date_joined', models.DateTimeField()),
                ('hash_pwd', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('id_tribut', models.ForeignKey(db_column='id_tribut', on_delete=django.db.models.deletion.DO_NOTHING, to='UsersApp.tribut')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'myuser',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TutorLink',
            fields=[
                ('id_tutor_link', models.AutoField(primary_key=True, serialize=False)),
                ('id_child', models.ForeignKey(db_column='id_child', on_delete=django.db.models.deletion.DO_NOTHING, to='UsersApp.child')),
                ('id_myuser', models.ForeignKey(db_column='id_myuser', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tutor_link',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Trophies',
            fields=[
                ('id_trophies', models.AutoField(primary_key=True, serialize=False)),
                ('id_badge', models.ForeignKey(db_column='id_badge', on_delete=django.db.models.deletion.DO_NOTHING, to='UsersApp.badge')),
                ('id_child', models.ForeignKey(db_column='id_child', on_delete=django.db.models.deletion.DO_NOTHING, to='UsersApp.child')),
            ],
            options={
                'db_table': 'trophies',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='child',
            name='id_tribut',
            field=models.ForeignKey(db_column='id_tribut', on_delete=django.db.models.deletion.DO_NOTHING, to='UsersApp.tribut'),
        ),
    ]
